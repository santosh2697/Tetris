{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport { React, useEffect } from \"react\";\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { useFonts } from \"expo-font\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nvar App = function App() {\n  var getRespone = function () {\n    var _ref = _asyncToGenerator(function* () {\n      try {\n        var fetchApi = yield fetch(\"https://dev-ppcms.pragmaticplaysports.net//api/vtl/category-flag/\");\n        var response = yield fetchApi.json();\n        console.log(response);\n      } catch (error) {\n        console.log(\"Error fetching data :\", error);\n      }\n    });\n    return function getRespone() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n  useEffect(function () {\n    getRespone();\n  }, []);\n  var _useFonts = useFonts({\n      Dancing: require(\"./assets/fonts/DancingScript-Bold.ttf\")\n    }),\n    _useFonts2 = _slicedToArray(_useFonts, 1),\n    fontsLoaded = _useFonts2[0];\n  if (!fontsLoaded) {\n    return null;\n  }\n  return _jsx(View, {\n    style: styles.container,\n    children: _jsx(ImageBackground, {\n      source: require(\"./assets/static-images/splash.webp\"),\n      resizeMode: \"cover\",\n      style: styles.image,\n      children: _jsx(Text, {\n        style: styles.text,\n        children: \"Tetris\"\n      })\n    })\n  });\n};\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1\n  },\n  image: {\n    flex: 1,\n    justifyContent: \"center\"\n  },\n  text: {\n    color: \"white\",\n    fontSize: 42,\n    lineHeight: 84,\n    textAlign: \"center\",\n    backgroundColor: \"#000000c0\",\n    fontFamily: \"Dancing\"\n  }\n});\nexport default App;","map":{"version":3,"names":["React","useEffect","ImageBackground","StyleSheet","Text","View","useFonts","jsx","_jsx","App","getRespone","_ref","_asyncToGenerator","fetchApi","fetch","response","json","console","log","error","apply","arguments","_useFonts","Dancing","require","_useFonts2","_slicedToArray","fontsLoaded","style","styles","container","children","source","resizeMode","image","text","create","flex","justifyContent","color","fontSize","lineHeight","textAlign","backgroundColor","fontFamily"],"sources":["C:/Techmojo-3414/Tetris/App.js"],"sourcesContent":["import { React, useEffect } from \"react\";\nimport { ImageBackground, StyleSheet, Text, View } from \"react-native\";\nimport { useFonts } from \"expo-font\";\n\nconst App = () => {\n  const getRespone = async () => {\n    try {\n      const fetchApi = await fetch(\n        \"https://dev-ppcms.pragmaticplaysports.net//api/vtl/category-flag/\"\n      );\n      const response = await fetchApi.json();\n      console.log(response);\n    } catch (error) {\n      console.log(\"Error fetching data :\", error);\n    }\n  };\n\n  useEffect(() => {\n    getRespone();\n  }, []);\n\n  const [fontsLoaded] = useFonts({\n    Dancing: require(\"./assets/fonts/DancingScript-Bold.ttf\"),\n  });\n  if (!fontsLoaded) {\n    return null;\n  }\n\n  return (\n    <View style={styles.container}>\n      <ImageBackground\n        source={require(\"./assets/static-images/splash.webp\")}\n        resizeMode=\"cover\"\n        style={styles.image}\n      >\n        <Text style={styles.text}>Tetris</Text>\n      </ImageBackground>\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n  },\n  image: {\n    flex: 1,\n    justifyContent: \"center\",\n  },\n  text: {\n    color: \"white\",\n    fontSize: 42,\n    lineHeight: 84,\n    textAlign: \"center\",\n    backgroundColor: \"#000000c0\",\n    fontFamily: \"Dancing\",\n  },\n});\n\nexport default App;\n"],"mappings":";;AAAA,SAASA,KAAK,EAAEC,SAAS,QAAQ,OAAO;AAAC,OAAAC,eAAA;AAAA,OAAAC,UAAA;AAAA,OAAAC,IAAA;AAAA,OAAAC,IAAA;AAEzC,SAASC,QAAQ,QAAQ,WAAW;AAAC,SAAAC,GAAA,IAAAC,IAAA;AAErC,IAAMC,GAAG,GAAG,SAANA,GAAGA,CAAA,EAAS;EAChB,IAAMC,UAAU;IAAA,IAAAC,IAAA,GAAAC,iBAAA,CAAG,aAAY;MAC7B,IAAI;QACF,IAAMC,QAAQ,SAASC,KAAK,CAC1B,mEACF,CAAC;QACD,IAAMC,QAAQ,SAASF,QAAQ,CAACG,IAAI,CAAC,CAAC;QACtCC,OAAO,CAACC,GAAG,CAACH,QAAQ,CAAC;MACvB,CAAC,CAAC,OAAOI,KAAK,EAAE;QACdF,OAAO,CAACC,GAAG,CAAC,uBAAuB,EAAEC,KAAK,CAAC;MAC7C;IACF,CAAC;IAAA,gBAVKT,UAAUA,CAAA;MAAA,OAAAC,IAAA,CAAAS,KAAA,OAAAC,SAAA;IAAA;EAAA,GAUf;EAEDpB,SAAS,CAAC,YAAM;IACdS,UAAU,CAAC,CAAC;EACd,CAAC,EAAE,EAAE,CAAC;EAEN,IAAAY,SAAA,GAAsBhB,QAAQ,CAAC;MAC7BiB,OAAO,EAAEC,OAAO,wCAAwC;IAC1D,CAAC,CAAC;IAAAC,UAAA,GAAAC,cAAA,CAAAJ,SAAA;IAFKK,WAAW,GAAAF,UAAA;EAGlB,IAAI,CAACE,WAAW,EAAE;IAChB,OAAO,IAAI;EACb;EAEA,OACEnB,IAAA,CAACH,IAAI;IAACuB,KAAK,EAAEC,MAAM,CAACC,SAAU;IAAAC,QAAA,EAC5BvB,IAAA,CAACN,eAAe;MACd8B,MAAM,EAAER,OAAO,qCAAqC,CAAE;MACtDS,UAAU,EAAC,OAAO;MAClBL,KAAK,EAAEC,MAAM,CAACK,KAAM;MAAAH,QAAA,EAEpBvB,IAAA,CAACJ,IAAI;QAACwB,KAAK,EAAEC,MAAM,CAACM,IAAK;QAAAJ,QAAA,EAAC;MAAM,CAAM;IAAC,CACxB;EAAC,CACd,CAAC;AAEX,CAAC;AAED,IAAMF,MAAM,GAAG1B,UAAU,CAACiC,MAAM,CAAC;EAC/BN,SAAS,EAAE;IACTO,IAAI,EAAE;EACR,CAAC;EACDH,KAAK,EAAE;IACLG,IAAI,EAAE,CAAC;IACPC,cAAc,EAAE;EAClB,CAAC;EACDH,IAAI,EAAE;IACJI,KAAK,EAAE,OAAO;IACdC,QAAQ,EAAE,EAAE;IACZC,UAAU,EAAE,EAAE;IACdC,SAAS,EAAE,QAAQ;IACnBC,eAAe,EAAE,WAAW;IAC5BC,UAAU,EAAE;EACd;AACF,CAAC,CAAC;AAEF,eAAenC,GAAG"},"metadata":{},"sourceType":"module","externalDependencies":[]}