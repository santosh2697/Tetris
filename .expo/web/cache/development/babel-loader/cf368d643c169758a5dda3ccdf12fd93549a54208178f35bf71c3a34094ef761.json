{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { React, useCallback } from \"react\";\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { useFonts } from \"expo-font\";\nimport * as SplashScreen from \"expo-splash-screen\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nvar App = function App() {\n  var _useFonts = useFonts({\n      PressStart2P: require(\"./assets/fonts/DancingScript-Bold.ttf\")\n    }),\n    _useFonts2 = _slicedToArray(_useFonts, 1),\n    fontsLoaded = _useFonts2[0];\n  var onLayoutRootView = useCallback(_asyncToGenerator(function* () {\n    if (fontsLoaded) {\n      yield SplashScreen.hideAsync();\n    }\n  }), [fontsLoaded]);\n  if (!fontsLoaded) {\n    return null;\n  }\n  return _jsx(View, {\n    style: styles.container,\n    onLayout: onLayoutRootView,\n    children: _jsx(ImageBackground, {\n      source: require(\"./assets/static-images/splash.webp\"),\n      resizeMode: \"cover\",\n      style: styles.image,\n      children: _jsx(Text, {\n        style: styles.text,\n        children: \"Tetris\"\n      })\n    })\n  });\n};\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1\n  },\n  image: {\n    flex: 1,\n    justifyContent: \"center\"\n  },\n  text: {\n    color: \"white\",\n    fontSize: 42,\n    lineHeight: 84,\n    fontWeight: \"bold\",\n    textAlign: \"center\",\n    backgroundColor: \"#000000c0\",\n    fontFamily: \"PressStart2P\"\n  }\n});\nexport default App;","map":{"version":3,"names":["React","useCallback","ImageBackground","StyleSheet","Text","View","useFonts","SplashScreen","jsx","_jsx","App","_useFonts","PressStart2P","require","_useFonts2","_slicedToArray","fontsLoaded","onLayoutRootView","_asyncToGenerator","hideAsync","style","styles","container","onLayout","children","source","resizeMode","image","text","create","flex","justifyContent","color","fontSize","lineHeight","fontWeight","textAlign","backgroundColor","fontFamily"],"sources":["C:/Techmojo-3414/Tetris/App.js"],"sourcesContent":["import { React, useCallback } from \"react\";\nimport { ImageBackground, StyleSheet, Text, View } from \"react-native\";\nimport { useFonts } from \"expo-font\";\nimport * as SplashScreen from \"expo-splash-screen\";\n\nconst App = () => {\n  const [fontsLoaded] = useFonts({\n    PressStart2P: require(\"./assets/fonts/DancingScript-Bold.ttf\"),\n  });\n\n  const onLayoutRootView = useCallback(async () => {\n    if (fontsLoaded) {\n      await SplashScreen.hideAsync();\n    }\n  }, [fontsLoaded]);\n\n  if (!fontsLoaded) {\n    return null;\n  }\n\n  return (\n    <View style={styles.container} onLayout={onLayoutRootView}>\n      <ImageBackground\n        source={require(\"./assets/static-images/splash.webp\")}\n        resizeMode=\"cover\"\n        style={styles.image}\n      >\n        <Text style={styles.text}>Tetris</Text>\n      </ImageBackground>\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n  },\n  image: {\n    flex: 1,\n    justifyContent: \"center\",\n  },\n  text: {\n    color: \"white\",\n    fontSize: 42,\n    lineHeight: 84,\n    fontWeight: \"bold\",\n    textAlign: \"center\",\n    backgroundColor: \"#000000c0\",\n    fontFamily: \"PressStart2P\",\n  },\n});\n\nexport default App;\n"],"mappings":";;AAAA,SAASA,KAAK,EAAEC,WAAW,QAAQ,OAAO;AAAC,OAAAC,eAAA;AAAA,OAAAC,UAAA;AAAA,OAAAC,IAAA;AAAA,OAAAC,IAAA;AAE3C,SAASC,QAAQ,QAAQ,WAAW;AACpC,OAAO,KAAKC,YAAY,MAAM,oBAAoB;AAAC,SAAAC,GAAA,IAAAC,IAAA;AAEnD,IAAMC,GAAG,GAAG,SAANA,GAAGA,CAAA,EAAS;EAChB,IAAAC,SAAA,GAAsBL,QAAQ,CAAC;MAC7BM,YAAY,EAAEC,OAAO,wCAAwC;IAC/D,CAAC,CAAC;IAAAC,UAAA,GAAAC,cAAA,CAAAJ,SAAA;IAFKK,WAAW,GAAAF,UAAA;EAIlB,IAAMG,gBAAgB,GAAGhB,WAAW,CAAAiB,iBAAA,CAAC,aAAY;IAC/C,IAAIF,WAAW,EAAE;MACf,MAAMT,YAAY,CAACY,SAAS,CAAC,CAAC;IAChC;EACF,CAAC,GAAE,CAACH,WAAW,CAAC,CAAC;EAEjB,IAAI,CAACA,WAAW,EAAE;IAChB,OAAO,IAAI;EACb;EAEA,OACEP,IAAA,CAACJ,IAAI;IAACe,KAAK,EAAEC,MAAM,CAACC,SAAU;IAACC,QAAQ,EAAEN,gBAAiB;IAAAO,QAAA,EACxDf,IAAA,CAACP,eAAe;MACduB,MAAM,EAAEZ,OAAO,qCAAqC,CAAE;MACtDa,UAAU,EAAC,OAAO;MAClBN,KAAK,EAAEC,MAAM,CAACM,KAAM;MAAAH,QAAA,EAEpBf,IAAA,CAACL,IAAI;QAACgB,KAAK,EAAEC,MAAM,CAACO,IAAK;QAAAJ,QAAA,EAAC;MAAM,CAAM;IAAC,CACxB;EAAC,CACd,CAAC;AAEX,CAAC;AAED,IAAMH,MAAM,GAAGlB,UAAU,CAAC0B,MAAM,CAAC;EAC/BP,SAAS,EAAE;IACTQ,IAAI,EAAE;EACR,CAAC;EACDH,KAAK,EAAE;IACLG,IAAI,EAAE,CAAC;IACPC,cAAc,EAAE;EAClB,CAAC;EACDH,IAAI,EAAE;IACJI,KAAK,EAAE,OAAO;IACdC,QAAQ,EAAE,EAAE;IACZC,UAAU,EAAE,EAAE;IACdC,UAAU,EAAE,MAAM;IAClBC,SAAS,EAAE,QAAQ;IACnBC,eAAe,EAAE,WAAW;IAC5BC,UAAU,EAAE;EACd;AACF,CAAC,CAAC;AAEF,eAAe5B,GAAG"},"metadata":{},"sourceType":"module","externalDependencies":[]}